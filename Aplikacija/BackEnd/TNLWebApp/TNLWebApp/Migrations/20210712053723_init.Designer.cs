// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TNLWebApp.Models;

namespace TNLWebApp.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20210712053723_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("TNLWebApp.Models.ChatMessage", b =>
                {
                    b.Property<int>("ChatMessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("MsgRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ReceiverID")
                        .HasColumnType("int");

                    b.Property<int>("SenderID")
                        .HasColumnType("int");

                    b.HasKey("ChatMessageID");

                    b.ToTable("ChatMessage");
                });

            modelBuilder.Entity("TNLWebApp.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<bool>("PrivateGroup")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Subject")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("GroupID");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("TNLWebApp.Models.GroupChat", b =>
                {
                    b.Property<int>("GroupChatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("SenderName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("SenderNum")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GroupChatID");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserId");

                    b.ToTable("GroupChat");
                });

            modelBuilder.Entity("TNLWebApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Faculty")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gender")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<float>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("RatingCount")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Subject")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("UserId");

                    b.HasIndex("GroupID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TNLWebApp.Models.GroupChat", b =>
                {
                    b.HasOne("TNLWebApp.Models.Group", "Group")
                        .WithMany("GroupChats")
                        .HasForeignKey("GroupID");

                    b.HasOne("TNLWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TNLWebApp.Models.User", b =>
                {
                    b.HasOne("TNLWebApp.Models.Group", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupID");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("TNLWebApp.Models.Group", b =>
                {
                    b.Navigation("GroupChats");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
